{
/*
	// Place your snippets for PowerShell here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"functionTemplateDynamicParameters" : {
		"prefix": "functionTemplateDynParm",
		"body": [
		"####################",
		"# FUNCTIONS - PREP #",
		"####################",
		"#Requires -",
		"\r",
		"#####################",
		"# PUBLIC FUNCTIONS - START #",
		"#####################",
		"function \" FUNCTION NAME \"() {",
		"<#",
		".DESCRIPTION",
		"\t.",
		"\r",
		"\t- Potential requirements",
		"\r",
		"\t- Returns",
		"\r",
		".PARAMETER \" Some parameter \"",
		"\t\"SOME DESCRIPTION OF SAID PARAMETER \"",
		".EXAMPLE",
		"\tC:\\PS>",
		"\t<Description of example>",
		"#>",
		"\r",
		"\t# Define parameters",
		"\tparam(",
		"\t\t[Parameter(Mandatory=$$true, ParameterSetName=\" NAME \", HelpMessage=\" MESSAGE\")]",
		"\t\t[ValidateNotNullOrEmpty()]",
		"\t\t$$NAMEOFPARAMETER",
		"\t)",
		"\r",
		"\tDynamicParam {",
		"\t\tif($$PARAMETER -eq \"\") {",
		"\t\t\t# Configure parameter",
		"\t\t\t$$attributes = new-object System.Management.Automation.ParameterAttribute;",
		"\t\t\t$$attributes.Mandatory = $$true;",
		"\t\t\t$$attributes.HelpMessage = \" PARAMETER DESCRIPTION .\";",
		"\t\t\t$$ValidateNotNullOrEmpty = New-Object Management.Automation.ValidateNotNullOrEmptyAttribute;",
		"\r",
		"\t\t\t# Define parameter collection",
		"\t\t\t$$attributeCollection = new-object -Type System.Collections.ObjectModel.Collection[System.Attribute];",
		"\t\t\t$$attributeCollection.Add($$attributes);",
		"\t\t\t$$attributeCollection.Add($$ValidateNotNullOrEmpty);",
		"\r",
		"\t\t\t# Prepare to return & expose the parameter",
		"\t\t\t$$ParameterName = \" PARAMETER NAME \";",
		"\t\t\t[Type]$$ParameterType = \"String\";",
		"\t\t\t$$Parameter = New-Object Management.Automation.RuntimeDefinedParameter($$ParameterName, $$ParameterType, $$AttributeCollection);",
		"\t\t\tif ($$psboundparameters.ContainsKey('DefaultValue')) {",
		"\t\t\t\t$$Parameter.Value = $$DefaultValue;",
		"\t\t\t}",
		"\t\t\t$$paramDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary;",
		"\t\t\t$$paramDictionary.Add($$ParameterName, $$Parameter);",
		"\r",
		"\t\t\treturn $$paramDictionary;",
		"\t\t}",
		"\t}",
		"\r",
		"\t####",
		"\t# Execution",
		"\t####",
		"\tBegin {};",
		"\tProcess {",
		"\r",
		"\t};",
		"\tEnd{};",
		"}",
		"\r",
		"Export-ModuleMember -Function \"\"",
		"###################",
		"# PUBLIC FUNCTIONS - END #",
		"####################"],
		"description": "PowerShell function template with dynamic parameter."
	},
	"functionTemplate" : {
		"prefix": "functionTemplate",
		"body": [
		"####################",
		"# FUNCTIONS - PREP #",
		"####################",
		"#Requires -",
		"\r",
		"#####################",
		"# PUBLIC FUNCTIONS - START #",
		"#####################",
		"function \" FUNCTION NAME \"() {",
		"<#",
		".DESCRIPTION",
		"\t.",
		"\r",
		"\t- Potential requirements",
		"\r",
		"\t- Returns",
		"\r",
		".PARAMETER \" Some parameter \"",
		"\t\"SOME DESCRIPTION OF SAID PARAMETER \"",
		".EXAMPLE",
		"\tC:\\PS>",
		"\t<Description of example>",
		"#>",
		"\r",
		"\t# Define parameters",
		"\tparam(",
		"\t\t[Parameter(Mandatory=$$true, ParameterSetName=\" NAME \", HelpMessage=\" MESSAGE\")]",
		"\t\t[ValidateNotNullOrEmpty()]",
		"\t\t$$NAMEOFPARAMETER",
		"\t)",
		"\r",
		"\t####",
		"\t# Execution",
		"\t####",
		"\r",
		"}",
		"\r",
		"###################",
		"# PUBLIC FUNCTIONS - END #",
		"####################"],
		"description": "PowerShell function template."
	},
	"scriptTemplate" : {
		"prefix": "scriptTemplate",
		"body": [
		"<#",
		"\t- Script description",
		"\r",
		"\t- Potential requirements",
		"#>",
		"#################",
		"# SCRIPT - PREP #",
		"#################",
		"#Requires -",
		"\r",
		"##################",
		"# SCRIPT - START #",
		"##################",
		"\r",
		"################",
		"# SCRIPT - END #",
		"################"],
		"description": "PowerShell script (.ps1) template."
	},
	"helpPsFunction" : {
		"prefix": "helpPsFunction",
		"body": [
		"<#",
		".DESCRIPTION",
		"\tLong description",
		".INPUTS",
		"\tInputs (if any)",
		".OUTPUTS",
		"\tOutputs (if any)",
		".NOTES",
		"\t General notes",
		".EXAMPLE",
		"\t PS C:\\> <example usage>",
		"\t Explanation of what the example does",
		".PARAMETER \"NAME OF THE PARAMETER WITHOUT THE QUOTES\"",
		"\t Parameter HelpMessage text",
		"\t Add a .PARAMETER per parameter",
		"#>"],
		"description": "PowerShell function help section."
	}
}